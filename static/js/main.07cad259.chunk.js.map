{"version":3,"sources":["components/Logo/Logo.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Logo","tilt_default","options","max","height","width","src","Image","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","FaceRecognition","imageUrl","box","topRow","rightCol","bottomRow","leftCol","id","top","right","bottom","left","SignIn","htmlFor","name","value","Register","app","Clarifai","App","apiKey","particleOptions","particles","number","density","enable","value_area","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","onSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","_this$state","particles_default","params","components_Navigation_Navigation","src_components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_SignIn_SignIn","components_Register_Register","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6UCoBzBC,EAlBI,SAAAC,GAAiC,IAA/BC,EAA+BD,EAA/BC,cACjB,OADgDD,EAAhBE,WAGxBC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,aAC1CL,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAMR,EAAc,YAAYS,UAAU,2CAAtD,aAMJP,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,aAC1CL,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAMR,EAAc,WAAWS,UAAU,2CAArD,WACAP,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAMR,EAAc,aAAaS,UAAU,2CAAvD,gDCODC,SAhBF,WACX,OACER,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACbP,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACEM,UAAU,oBACVG,QAAS,CAAEC,IAAK,IAChBR,MAAO,CAAES,OAAQ,IAAKC,MAAO,MAE7Bb,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKY,IAAKC,IAAOC,IAAI,YCchBC,SAzBO,SAAApB,GAAuC,IAApCqB,EAAoCrB,EAApCqB,cAAeC,EAAqBtB,EAArBsB,eACtC,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGK,UAAU,MACV,gEAEHP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qCACbP,EAAAC,EAAAC,cAAA,SACEK,UAAU,qBACVa,KAAK,OACLC,SAAUH,IAEZlB,EAAAC,EAAAC,cAAA,UACEI,QAASa,EACTZ,UAAU,+DAFZ,eCLKe,EATF,WACX,OACEtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YAAY,mCAC3BP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YAAY,QCgBlBgB,SAnBS,SAAA1B,GAAuB,IAApB2B,EAAoB3B,EAApB2B,SAAUC,EAAU5B,EAAV4B,IAE5BC,EAAwCD,EAAxCC,OAAQC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,UAAWC,EAAWJ,EAAXI,QACpC,OACE7B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAAA,OACEY,IAAKU,EACLM,GAAG,aACHd,IAAI,mBACJH,MAAM,QACND,OAAO,SAETZ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eAAeJ,MAAO,CAAC4B,IAAKL,EAAQM,MAAOL,EAAUM,OAAQL,EAAWM,KAAML,SCmBtFM,EAjCA,SAAAtC,GAAqB,IAAnBC,EAAmBD,EAAnBC,cACf,OACEE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,4EACXP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,gBACZP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACXP,EAAAC,EAAAC,cAAA,YAAU4B,GAAG,UAAUvB,UAAU,6BACjCP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,kBAAlB,WACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,oBAAoB6B,QAAQ,iBAA7C,SACApC,EAAAC,EAAAC,cAAA,SAAOK,UAAU,qEAAqEa,KAAK,QAAQiB,KAAK,gBAAiBP,GAAG,mBAEhI9B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,oBAAoB6B,QAAQ,YAA7C,YACApC,EAAAC,EAAAC,cAAA,SAAOK,UAAU,uEAAuEa,KAAK,WAAWiB,KAAK,WAAYP,GAAG,eAGhI9B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,IACfP,EAAAC,EAAAC,cAAA,SACIK,UAAU,uEACVD,QAAS,kBAAMR,EAAc,SAC7BsB,KAAK,SACLkB,MAAM,aAGVtC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACfP,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAMR,EAAc,aAAaS,UAAU,gCAAvD,iBCSDgC,EAlCE,SAAA1C,GAAqB,IAAnBC,EAAmBD,EAAnBC,cACjB,OACEE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,4EACXP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,gBACtBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,YAAU4B,GAAG,UAAUvB,UAAU,6BAC/BP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,kBAAlB,YACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,oBAAoB6B,QAAQ,QAA7C,QACApC,EAAAC,EAAAC,cAAA,SAAOK,UAAU,qEAAqEa,KAAK,OAAOiB,KAAK,OAAQP,GAAG,UAEpH9B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,oBAAoB6B,QAAQ,iBAA7C,SACApC,EAAAC,EAAAC,cAAA,SAAOK,UAAU,qEAAqEa,KAAK,QAAQiB,KAAK,gBAAiBP,GAAG,mBAE9H9B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,oBAAoB6B,QAAQ,YAA7C,YACApC,EAAAC,EAAAC,cAAA,SAAOK,UAAU,uEAAuEa,KAAK,WAAWiB,KAAK,WAAYP,GAAG,eAGhI9B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,IACbP,EAAAC,EAAAC,cAAA,SACEK,UAAU,uEACVD,QAAS,kBAAMR,EAAc,SAC7BsB,KAAK,SACLkB,MAAM,kBCfRE,SAAM,IAAIC,IAASC,IAAI,CAC3BC,OAAQ,sCAGJC,EAAkB,CACtBC,UAAW,CACTC,OAAQ,CACNR,MAAO,IACPS,QAAS,CACPC,QAAQ,EACRC,WAAY,QA2FLP,cApFb,SAAAA,IAAc,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAX,IACZQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAT,GAAAc,KAAAH,QAUFI,sBAAwB,SAAAC,GACtB,IAAMC,EACJD,EAAKE,QAAQ,GAAGF,KAAKG,QAAQ,GAAGC,YAAYC,aACxCC,EAAQC,SAASC,eAAe,cAChCrD,EAAQsD,OAAOH,EAAMnD,OACrBD,EAASuD,OAAOH,EAAMpD,QAE5B,MAAO,CACLiB,QAAS8B,EAAaS,SAAWvD,EACjCa,OAAQiC,EAAaU,QAAUzD,EAC/Be,SAAUd,EAAQ8C,EAAaW,UAAYzD,EAC3Ce,UAAWhB,EAAS+C,EAAaY,WAAa3D,IAtBpCsC,EA0BdsB,eAAiB,SAAA/C,GACfgD,QAAQC,IAAIjD,GACZyB,EAAKyB,SAAS,CAAElD,IAAKA,KA5BTyB,EA+BdhC,cAAgB,SAAA0D,GACd1B,EAAKyB,SAAS,CAAEE,MAAOD,EAAME,OAAOxC,SAhCxBY,EAmCd6B,SAAW,WACT7B,EAAKyB,SAAS,CAAEnD,SAAU0B,EAAK8B,MAAMH,QACrCrC,EAAIyC,OACDC,QAAQzC,IAAS0C,kBAAmBjC,EAAK8B,MAAMH,OAC/CO,KAAK,SAAAC,GAAQ,OACZnC,EAAKsB,eAAetB,EAAKO,sBAAsB4B,MAEhDC,MAAM,SAAAC,GAAG,OAAId,QAAQC,IAAIa,MA1ChBrC,EA6CdpD,cAAgB,SAAC0F,GACF,YAAVA,EACDtC,EAAKyB,SAAS,CAAC5E,YAAY,IAEZ,SAATyF,GACNtC,EAAKyB,SAAS,CAAC5E,YAAY,IAE7BmD,EAAKyB,SAAS,CAACa,MAAOA,KAlDtBtC,EAAK8B,MAAQ,CACXH,MAAO,GACPrD,SAAU,GACVC,IAAK,GACL+D,MAAO,SACPzF,YAAY,GAPFmD,wEAuDL,IAAAuC,EACsCpC,KAAK2B,MAA1CjF,EADD0F,EACC1F,WAAYyB,EADbiE,EACajE,SAAUgE,EADvBC,EACuBD,MAAO/D,EAD9BgE,EAC8BhE,IACrC,OACEzB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAWM,UAAU,YAAYoF,OAAQ/C,IACzC5C,EAAAC,EAAAC,cAAC0F,EAAD,CAAY7F,WAAYA,EAAYD,cAAeuD,KAAKvD,gBAC9C,SAAR0F,EAEAxF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2F,EAAD,MACA7F,EAAAC,EAAAC,cAAC4F,EAAD,MACA9F,EAAAC,EAAAC,cAAC6F,EAAD,CACE7E,cAAemC,KAAKnC,cACpBC,eAAgBkC,KAAK0B,WAEvB/E,EAAAC,EAAAC,cAAC8F,EAAD,CAAiBvE,IAAKA,EAAKD,SAAUA,KAG5B,WAATgE,EACAxF,EAAAC,EAAAC,cAAC+F,EAAD,CAAQnG,cAAeuD,KAAKvD,gBAE5BE,EAAAC,EAAAC,cAACgG,EAAD,CAAUpG,cAAeuD,KAAKvD,wBA7ExBqG,mBChBEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO1G,EAAAC,EAAAC,cAACyG,EAAD,MAAS1C,SAASC,eAAe,SD0H3C,kBAAmB0C,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC","file":"static/js/main.07cad259.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.c114cde2.png\";","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if(isSignedIn){\r\n        return(\r\n            <nav style={{display: \"flex\", justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signOut')} className=\"f3 link dim black underline pa3 pointer\">Sign Out</p>\r\n            </nav>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <nav style={{display: \"flex\", justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signIn')} className=\"f3 link dim black underline pa3 pointer\">Sign In</p>\r\n                <p onClick={() => onRouteChange('register')} className=\"f3 link dim black underline pa3 pointer\">Register</p>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport Image from \"./Logo.png\";\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ma4 mt0 center-flex\">\r\n      <Tilt\r\n        className=\"Tilt br2 shadow-2\"\r\n        options={{ max: 55 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img src={Image} alt=\"AI\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">\r\n        {\"This AI will detect faces in your pictures. Give it a Try!! \"}\r\n      </p>\r\n      <div className=\"center-flex\">\r\n        <div className=\"form center-flex pa4 br3 shadow-5\">\r\n          <input\r\n            className=\"f4 pa2 w-70 center\"\r\n            type=\"text\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button\r\n            onClick={onButtonSubmit}\r\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple pointer\"\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from \"react\";\r\n\r\nconst Rank = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"white f3\">{\"Andrei, Your Current Rank is...\"}</div>\r\n      <div className=\"white f1\">{\"#5\"}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  //console.log(imageUrl);\r\n  const {topRow, rightCol, bottomRow, leftCol} = box;\r\n  return (\r\n    <div className=\"center-flex ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img\r\n          src={imageUrl}\r\n          id=\"inputimage\"\r\n          alt=\"Face Recognition\"\r\n          width=\"500px\"\r\n          height=\"auto\"\r\n        />\r\n        <div className=\"bounding-box\" style={{top: topRow, right: rightCol, bottom: bottomRow, left: leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React from \"react\";\r\n\r\nconst SignIn = ({onRouteChange}) => {\r\n  return (\r\n    <div className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n            <div className=\"measure center\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input \r\n                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                    onClick={() => onRouteChange('home')}\r\n                    type=\"submit\" \r\n                    value=\"Sign in\" \r\n                />\r\n                </div>\r\n                <div className=\"lh-copy mt3\">\r\n                <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\n\r\nconst Register = ({onRouteChange}) => {\r\n  return (\r\n    <div className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n  <div className=\"measure center\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n      </div>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input \r\n        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n        onClick={() => onRouteChange('home')}\r\n        type=\"submit\" \r\n        value=\"Register\" \r\n       />\r\n    </div>\r\n  </div>\r\n</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport \"./App.css\";\n\nconst app = new Clarifai.App({\n  apiKey: \"a33970351b7b4e17b61b4dd7a2b04868\"\n});\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 200,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signIn\",\n      isSignedIn: false\n    };\n  }\n\n  calculateFaceLocation = data => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    //console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  displayFaceBox = box => {\n    console.log(box);\n    this.setState({ box: box });\n  };\n\n  onInputChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response =>\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      )\n      .catch(err => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    if(route === \"signOut\") {\n      this.setState({isSignedIn: false})\n    }\n    else if(route ===\"home\") {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route });\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particleOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route===\"home\"?\n          // wrapped in div else it will give error: cannot return multiple JSX\n          <div>  \n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n          : (\n            route ===\"signIn\" ?\n            <SignIn onRouteChange={this.onRouteChange}/>\n            :\n            <Register onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}